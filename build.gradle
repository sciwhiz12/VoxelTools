buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.0.2-DEV'
group = 'sciwhiz12.voxeltools'
archivesBaseName = 'voxeltools'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20200723-1.16.1'

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                voxeltools {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                voxeltools {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'voxeltools', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                voxeltools {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.1-32.0.98'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "voxeltools",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "sciwhiz12",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

task deobfJar(type: Jar, dependsOn: 'jar') {
    from sourceSets.main.output
    classifier "dev"
}
task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier "sources"
}
artifacts {
    archives deobfJar
    archives sourcesJar
}
publishing {
    publications {
        pub_reobfJar(MavenPublication) {
            artifact jar
        }
        pub_deobfJar(MavenPublication) {
            artifact deobfJar
        }
        pub_sourcesJar(MavenPublication) {
            artifact sourcesJar
        }
    }
    repositories {
        mavenLocal()
    }
}
