buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        maven {
            name 'maven_central'
            url 'https://repo.maven.apache.org/maven2/'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.ajoberstar.grgit', name: 'grgit-gradle', 'version': '4.0.2'
    }
}
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'

println(grgit.head())
def mod_version = grgit.describe(longDescr: false, tags: true)
if (mod_version == null) mod_version = "unknown"
version = "${mc_version}-${mod_version}"
group = 'sciwhiz12.voxeltools'
archivesBaseName = 'voxeltools'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

println("Mod version: ${mod_version}")
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

sourceSets {
    main.resources.srcDirs += 'src/generated/resources/'
}

repositories {
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
}

minecraft {
    mappings channel: 'snapshot', version: "${mappings_version}"

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', "${logging_markers}"
            property 'forge.logging.console.level', 'debug'

            mods {
                voxeltools {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', "${logging_markers}"
            property 'forge.logging.console.level', 'debug'

            mods {
                voxeltools {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')

            property 'forge.logging.markers', "${logging_markers}"
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'voxeltools', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                voxeltools {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "voxeltools",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "sciwhiz12",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Git-Commit"              : grgit.head().id,
                "Git-Commit-Timestamp"    : grgit.head().date.format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
jar.finalizedBy('sourcesJar')

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier "sources"
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        pub_reobfJar(MavenPublication) {
            artifact jar
        }
        pub_sourcesJar(MavenPublication) {
            artifact sourcesJar
        }
    }
    repositories {
        mavenLocal()
    }
}
